{"ast":null,"code":"import React,{useState,useEffect}from'react';import TodoList from'./components/TodoList';import AddTodoForm from'./components/AddTodoForm';import'./App.css';import{supabase}from'./supabaseClient';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[todos,setTodos]=useState([{id:1,text:'學習 React',completed:false},{id:2,text:'購買groceries',completed:true},{id:3,text:'閱讀一本書',completed:false}]);const[connectionStatus,setConnectionStatus]=useState('未測試');const[isLoading,setIsLoading]=useState(false);const addTodo=text=>{const newTodo={id:Date.now(),text,completed:false};setTodos([...todos,newTodo]);};const toggleComplete=id=>{setTodos(todos.map(todo=>todo.id===id?{...todo,completed:!todo.completed}:todo));};const deleteTodo=id=>{setTodos(todos.filter(todo=>todo.id!==id));};// 測試 Supabase 連接\nconst testConnection=async()=>{setIsLoading(true);try{// 嘗試從 Supabase 獲取數據，即使表不存在也能測試連接\nconst{data,error}=await supabase.from('connection_test').select('*').limit(1);if(error&&error.code!=='42P01'){// 42P01 是「關係不存在」的錯誤，這是正常的\nconsole.error('連接測試失敗:',error);setConnectionStatus(`連接失敗: ${error.message}`);}else{console.log('連接測試成功:',data);setConnectionStatus('連接成功！資料庫可用');}}catch(error){console.error('連接測試失敗:',error.message);setConnectionStatus(`連接失敗: ${error.message}`);}finally{setIsLoading(false);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"app\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"\\u5F85\\u8FA6\\u4E8B\\u9805\\u6E05\\u55AE\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"connection-test\",children:[/*#__PURE__*/_jsxs(\"h3\",{children:[\"Supabase \\u9023\\u63A5\\u72C0\\u614B: \",/*#__PURE__*/_jsx(\"span\",{className:connectionStatus.includes('成功')?'success':'failed',children:connectionStatus})]}),/*#__PURE__*/_jsx(\"button\",{onClick:testConnection,disabled:isLoading,className:\"test-button\",children:isLoading?'測試中...':'測試資料庫連接'})]}),/*#__PURE__*/_jsx(AddTodoForm,{addTodo:addTodo}),/*#__PURE__*/_jsx(TodoList,{todos:todos,toggleComplete:toggleComplete,deleteTodo:deleteTodo})]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","TodoList","AddTodoForm","supabase","jsx","_jsx","jsxs","_jsxs","App","todos","setTodos","id","text","completed","connectionStatus","setConnectionStatus","isLoading","setIsLoading","addTodo","newTodo","Date","now","toggleComplete","map","todo","deleteTodo","filter","testConnection","data","error","from","select","limit","code","console","message","log","className","children","includes","onClick","disabled"],"sources":["C:/laragon/www/react/todo-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport TodoList from './components/TodoList';\r\nimport AddTodoForm from './components/AddTodoForm';\r\nimport './App.css';\r\nimport { supabase } from './supabaseClient';\r\n\r\nfunction App() {\r\n  const [todos, setTodos] = useState([\r\n    { id: 1, text: '學習 React', completed: false },\r\n    { id: 2, text: '購買groceries', completed: true },\r\n    { id: 3, text: '閱讀一本書', completed: false },\r\n  ]);\r\n  const [connectionStatus, setConnectionStatus] = useState('未測試');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const addTodo = (text) => {\r\n    const newTodo = {\r\n      id: Date.now(),\r\n      text,\r\n      completed: false\r\n    };\r\n    setTodos([...todos, newTodo]);\r\n  };\r\n\r\n  const toggleComplete = (id) => {\r\n    setTodos(todos.map(todo => \r\n      todo.id === id ? { ...todo, completed: !todo.completed } : todo\r\n    ));\r\n  };\r\n\r\n  const deleteTodo = (id) => {\r\n    setTodos(todos.filter(todo => todo.id !== id));\r\n  };\r\n\r\n  // 測試 Supabase 連接\r\n  const testConnection = async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      // 嘗試從 Supabase 獲取數據，即使表不存在也能測試連接\r\n      const { data, error } = await supabase\r\n        .from('connection_test')\r\n        .select('*')\r\n        .limit(1);\r\n      \r\n      if (error && error.code !== '42P01') { // 42P01 是「關係不存在」的錯誤，這是正常的\r\n        console.error('連接測試失敗:', error);\r\n        setConnectionStatus(`連接失敗: ${error.message}`);\r\n      } else {\r\n        console.log('連接測試成功:', data);\r\n        setConnectionStatus('連接成功！資料庫可用');\r\n      }\r\n    } catch (error) {\r\n      console.error('連接測試失敗:', error.message);\r\n      setConnectionStatus(`連接失敗: ${error.message}`);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <h1>待辦事項清單</h1>\r\n      \r\n      {/* Supabase 連接測試部分 */}\r\n      <div className=\"connection-test\">\r\n        <h3>Supabase 連接狀態: <span className={connectionStatus.includes('成功') ? 'success' : 'failed'}>{connectionStatus}</span></h3>\r\n        <button \r\n          onClick={testConnection} \r\n          disabled={isLoading}\r\n          className=\"test-button\"\r\n        >\r\n          {isLoading ? '測試中...' : '測試資料庫連接'}\r\n        </button>\r\n      </div>\r\n      \r\n      <AddTodoForm addTodo={addTodo} />\r\n      <TodoList \r\n        todos={todos} \r\n        toggleComplete={toggleComplete} \r\n        deleteTodo={deleteTodo} \r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}