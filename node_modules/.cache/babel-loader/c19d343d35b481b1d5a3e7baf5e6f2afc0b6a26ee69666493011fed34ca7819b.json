{"ast":null,"code":"var _jsxFileName = \"C:\\\\laragon\\\\www\\\\react\\\\todo-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport TodoList from './components/TodoList';\nimport AddTodoForm from './components/AddTodoForm';\nimport './App.css';\nimport { supabase } from './supabaseClient';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [todos, setTodos] = useState([{\n    id: 1,\n    text: '學習 React',\n    completed: false\n  }, {\n    id: 2,\n    text: '購買groceries',\n    completed: true\n  }, {\n    id: 3,\n    text: '閱讀一本書',\n    completed: false\n  }]);\n  const [connectionStatus, setConnectionStatus] = useState('未測試');\n  const [isLoading, setIsLoading] = useState(false);\n  const addTodo = text => {\n    const newTodo = {\n      id: Date.now(),\n      text,\n      completed: false\n    };\n    setTodos([...todos, newTodo]);\n  };\n  const toggleComplete = id => {\n    setTodos(todos.map(todo => todo.id === id ? {\n      ...todo,\n      completed: !todo.completed\n    } : todo));\n  };\n  const deleteTodo = id => {\n    setTodos(todos.filter(todo => todo.id !== id));\n  };\n\n  // 測試 Supabase 連接\n  const testConnection = async () => {\n    setIsLoading(true);\n    try {\n      // 嘗試從 Supabase 獲取數據，即使表不存在也能測試連接\n      const {\n        data,\n        error\n      } = await supabase.from('connection_test').select('*').limit(1);\n      if (error && error.code !== '42P01') {\n        // 42P01 是「關係不存在」的錯誤，這是正常的\n        console.error('連接測試失敗:', error);\n        setConnectionStatus(`連接失敗: ${error.message}`);\n      } else {\n        console.log('連接測試成功:', data);\n        setConnectionStatus('連接成功！資料庫可用');\n      }\n    } catch (error) {\n      console.error('連接測試失敗:', error.message);\n      setConnectionStatus(`連接失敗: ${error.message}`);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u5F85\\u8FA6\\u4E8B\\u9805\\u6E05\\u55AE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"connection-test\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Supabase \\u9023\\u63A5\\u72C0\\u614B: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: connectionStatus.includes('成功') ? 'success' : 'failed',\n          children: connectionStatus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: testConnection,\n        disabled: isLoading,\n        className: \"test-button\",\n        children: isLoading ? '測試中...' : '測試資料庫連接'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddTodoForm, {\n      addTodo: addTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n      todos: todos,\n      toggleComplete: toggleComplete,\n      deleteTodo: deleteTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"QAGT8FB4sgMvVw5bje/EkSWUL+o=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","TodoList","AddTodoForm","supabase","jsxDEV","_jsxDEV","App","_s","todos","setTodos","id","text","completed","connectionStatus","setConnectionStatus","isLoading","setIsLoading","addTodo","newTodo","Date","now","toggleComplete","map","todo","deleteTodo","filter","testConnection","data","error","from","select","limit","code","console","message","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","includes","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/laragon/www/react/todo-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport TodoList from './components/TodoList';\r\nimport AddTodoForm from './components/AddTodoForm';\r\nimport './App.css';\r\nimport { supabase } from './supabaseClient';\r\n\r\nfunction App() {\r\n  const [todos, setTodos] = useState([\r\n    { id: 1, text: '學習 React', completed: false },\r\n    { id: 2, text: '購買groceries', completed: true },\r\n    { id: 3, text: '閱讀一本書', completed: false },\r\n  ]);\r\n  const [connectionStatus, setConnectionStatus] = useState('未測試');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const addTodo = (text) => {\r\n    const newTodo = {\r\n      id: Date.now(),\r\n      text,\r\n      completed: false\r\n    };\r\n    setTodos([...todos, newTodo]);\r\n  };\r\n\r\n  const toggleComplete = (id) => {\r\n    setTodos(todos.map(todo => \r\n      todo.id === id ? { ...todo, completed: !todo.completed } : todo\r\n    ));\r\n  };\r\n\r\n  const deleteTodo = (id) => {\r\n    setTodos(todos.filter(todo => todo.id !== id));\r\n  };\r\n\r\n  // 測試 Supabase 連接\r\n  const testConnection = async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      // 嘗試從 Supabase 獲取數據，即使表不存在也能測試連接\r\n      const { data, error } = await supabase\r\n        .from('connection_test')\r\n        .select('*')\r\n        .limit(1);\r\n      \r\n      if (error && error.code !== '42P01') { // 42P01 是「關係不存在」的錯誤，這是正常的\r\n        console.error('連接測試失敗:', error);\r\n        setConnectionStatus(`連接失敗: ${error.message}`);\r\n      } else {\r\n        console.log('連接測試成功:', data);\r\n        setConnectionStatus('連接成功！資料庫可用');\r\n      }\r\n    } catch (error) {\r\n      console.error('連接測試失敗:', error.message);\r\n      setConnectionStatus(`連接失敗: ${error.message}`);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <h1>待辦事項清單</h1>\r\n      \r\n      {/* Supabase 連接測試部分 */}\r\n      <div className=\"connection-test\">\r\n        <h3>Supabase 連接狀態: <span className={connectionStatus.includes('成功') ? 'success' : 'failed'}>{connectionStatus}</span></h3>\r\n        <button \r\n          onClick={testConnection} \r\n          disabled={isLoading}\r\n          className=\"test-button\"\r\n        >\r\n          {isLoading ? '測試中...' : '測試資料庫連接'}\r\n        </button>\r\n      </div>\r\n      \r\n      <AddTodoForm addTodo={addTodo} />\r\n      <TodoList \r\n        todos={todos} \r\n        toggleComplete={toggleComplete} \r\n        deleteTodo={deleteTodo} \r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}